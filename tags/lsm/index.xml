<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>LSM - 标签 - Adbean&#39;s Blog</title>
        <link>https://ad-bean.github.io/tags/lsm/</link>
        <description>LSM - 标签 - Adbean&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>adbeanx@outlook.com (Adbean)</managingEditor>
            <webMaster>adbeanx@outlook.com (Adbean)</webMaster><lastBuildDate>Sat, 27 Jul 2024 22:10:57 &#43;0800</lastBuildDate><atom:link href="https://ad-bean.github.io/tags/lsm/" rel="self" type="application/rss+xml" /><item>
    <title>Mini-LSM Week 1 Day3</title>
    <link>https://ad-bean.github.io/posts/minilsm-3/</link>
    <pubDate>Sat, 27 Jul 2024 22:10:57 &#43;0800</pubDate>
    <author>Adbean</author>
    <guid>https://ad-bean.github.io/posts/minilsm-3/</guid>
    <description><![CDATA[Mini-LSM Week 1 Day3 Week1 Day3 的内容，实现 SST block 编解码和 iterator Task 1: Block Builder 前两章实现了 LSM 在内存中的结构，现在实现 on-disk 的结构，即 Block 块。 Blocks 一般 4-KB 大小（可能因存储介质不同），和]]></description>
</item>
<item>
    <title>Mini-LSM Week 1 Day2</title>
    <link>https://ad-bean.github.io/posts/minilsm-2/</link>
    <pubDate>Sat, 23 Mar 2024 16:51:28 -0400</pubDate>
    <author>Adbean</author>
    <guid>https://ad-bean.github.io/posts/minilsm-2/</guid>
    <description><![CDATA[Mini-LSM Week 1 Day2 Week1 Day2 的内容，实现 Merge Iterator https://skyzh.github.io/mini-lsm/week1-02-merge-iterator.html Merge Iterator 本次需要实现： Memtable Iterator Merge Iterator LSM read path scan for memtables Task1: Memtable Iterator 修改 src/mem_table.rs，实现 scan 接口，在一组 key-value pairs 上创建]]></description>
</item>
<item>
    <title>Mini-LSM Week 1 Day1</title>
    <link>https://ad-bean.github.io/posts/minilsm-1/</link>
    <pubDate>Fri, 22 Mar 2024 14:04:33 -0400</pubDate>
    <author>Adbean</author>
    <guid>https://ad-bean.github.io/posts/minilsm-1/</guid>
    <description><![CDATA[Mini-LSM Week 1 Day1 记录下 LSM 的学习过程，感谢迟先生的教程 https://skyzh.github.io/mini-lsm/ 前言 使用 Rust 实现 LSM-Tree 存储结构 什么是 LSM，为什么 LSM LSM, Log-structured merge trees, 是一种维护 key-value 对的数据结构。这种数据结构广]]></description>
</item>
</channel>
</rss>
